/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package multiplayer.minesweeper.rest;

import com.google.gson.Gson;
import io.vertx.core.AbstractVerticle;
import io.vertx.core.Vertx;
import io.vertx.core.http.HttpMethod;
import io.vertx.core.json.JsonObject;
import io.vertx.ext.web.Router;
import io.vertx.ext.web.RoutingContext;
import io.vertx.ext.web.handler.CorsHandler;
import multiplayer.minesweeper.game.GamesManager;
import multiplayer.minesweeper.gamemode.GameMode;
import multiplayer.minesweeper.gamemode.GameModeFactory;

public class HttpServer extends AbstractVerticle {
    private final Gson gson;
    private final GamesManager gamesManager;
    private final int port;

    public HttpServer(Vertx vertx, int port, GamesManager manager) {
        this.gamesManager = manager;
        this.port = port;
        gson = new Gson();
        vertx.deployVerticle(this);
    }

    private void createNewGame(RoutingContext rc) {

        rc.request().bodyHandler(bodyHandler -> {
            final JsonObject body = bodyHandler.toJsonObject();

            System.out.println("[HTTP Server] - Received POST new-game request. Body: " + body);

            String name = body.getString("name");
            GameMode gameMode = GameModeFactory.getByName(name);
            String gameId = gamesManager.newGame(gameMode);

            System.out.println("[HTTP Server] - Created new-game, created Socket.IO room: " + gameId);

            rc.response()
                    .putHeader("content-type",
                            "application/json; charset=utf-8")
                    .end(gameId);
        });
    }


    private void getGameModes(RoutingContext rc) {
        rc.request().bodyHandler(bodyHandler -> {
            System.out.println("[HTTP Server] - Received GET game-modes request. ");
            rc.response()
                    .putHeader("content-type",
                            "application/json; charset=utf-8")
                    .end(gson.toJson(GameModeFactory.getAllGameModes()));
        });
    }

    @Override
    public void start() {
        Router router = Router.router(vertx);

        router.route().handler(
                CorsHandler.create(".*.")
                        .allowedMethod(HttpMethod.GET)
                        .allowedMethod(HttpMethod.POST));

        router.post("/new-game").handler(this::createNewGame);
        router.get("/game-modes").handler(this::getGameModes);

        vertx.createHttpServer()
                .requestHandler(router)
                .listen(port)
                .onSuccess(server ->
                        System.out.println(
                                "[HTTP Server] - Http server started on port " + server.actualPort()
                        )
                );
    }

    public void close() {
        System.out.println("[HTTP Server] - Terminating http server");
        vertx.close();
    }
}