/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package multiplayer.minesweeper.rest.server;

import io.vertx.core.AbstractVerticle;
import io.vertx.core.http.HttpMethod;
import io.vertx.core.json.Json;
import io.vertx.ext.web.Router;
import io.vertx.ext.web.RoutingContext;
import io.vertx.ext.web.handler.CorsHandler;
import multiplayer.minesweeper.sessions.GameMode;
import multiplayer.minesweeper.sessions.SessionsManager;

public class HttpServer extends AbstractVerticle {
    private final static HttpServer instance = new HttpServer();

    private HttpServer() {}

    private void createNewSession(RoutingContext rc) {
        System.out.println("Received new session request.");

        String sessionName = rc.get("name");
        GameMode mode = GameMode.getEnum(rc.get("gameMode", GameMode.SMALL_GRID.getName()));

        String roomId = "test_room";

        SessionsManager.getInstance().addSession(roomId, sessionName, mode);

        rc.response()
                .putHeader("content-type",
                        "application/json; charset=utf-8")
                .end(Json.encodePrettily(roomId));
    }

//    private void connectToSession(RoutingContext rc) {
//        System.out.println("Received connect request.");
//
//        String roomId = rc.get("room_id");
//
//        rc.response()
//                .putHeader("content-type",
//                        "application/json; charset=utf-8")
//                .end(Json.encodePrettily(""));
//    }

    @Override
    public void start() {
        // Create a Router
        Router router = Router.router(vertx);

        router.route().handler(CorsHandler.create("((http://)|(https://))localhost\\:\\d+")
            .allowedMethod(HttpMethod.GET)
            .allowedMethod(HttpMethod.POST)
            .allowedMethod(HttpMethod.OPTIONS)
            .allowCredentials(true)
            .allowedHeader("Access-Control-Allow-Method")
            .allowedHeader("Access-Control-Allow-Origin")
            .allowedHeader("Access-Control-Allow-Credentials")
            .allowedHeader("Content-Type"));

//        router.post("/connect").handler(this::connectToSession);
        router.post("/create_session").handler(this::createNewSession);

        vertx.createHttpServer()
                .requestHandler(router)
                .listen(8001)
                .onSuccess(server ->
                        System.out.println(
                                "HTTP server started on port " + server.actualPort()
                        )
                );
    }

    public void close() {
        System.out.println("Terminating Vert.X http server");
        vertx.close();
    }

    public static HttpServer getInstance() {
        return instance;
    }
}